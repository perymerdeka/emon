version: '3.8'

services:
  app:
    build: . # Build the image from the Dockerfile in the current directory
    ports:
      - "8000:8000" # Map host port 8000 to container port 8000
    environment:
      # Set the database URL to connect to the PostgreSQL service
      DATABASE_URL: postgresql+asyncpg://emon_user:emon_password@db:5432/emon_db
      # You should ideally override this SECRET_KEY in a .env file or environment variable
      SECRET_KEY: ${SECRET_KEY:-09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7}
      # Add placeholders for AI keys - load these from your environment or a .env file
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-}
      # Set DEBUG based on environment or default to False for production-like setup
      DEBUG: ${DEBUG:-False}
      # Redis connection URL
      REDIS_URL: redis://redis:6379
    depends_on:
      - db # Ensure the database service starts before the app
      - redis # Ensure Redis starts before the app
    volumes: [] # No volumes mounted by default for production build
      # Optional: Mount local code for development (uncomment below and remove [])
      # - .:/app
    networks:
      - emon_network

  db:
    image: postgres:15-alpine # Use PostgreSQL 15 Alpine image
    environment:
      POSTGRES_USER: emon_user
      POSTGRES_PASSWORD: emon_password
      POSTGRES_DB: emon_db
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist database data
    ports: [] # No ports exposed to host by default
      # Optional: Expose PostgreSQL port to the host (uncomment below and remove [])
      # Be cautious exposing DB ports directly in production environments.
      # - "5432:5432"
    networks:
      - emon_network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    ports: [] # No ports exposed to host by default
    networks:
      - emon_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data: # Define the named volume for data persistence
  redis_data: # Define the named volume for Redis data persistence

networks:
  emon_network: # Define a custom network
    driver: bridge
