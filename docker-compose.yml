version: '3.8'

services:
  app:
    build:
      context: . # Build the image from the Dockerfile in the current directory
      dockerfile: Dockerfile # Explicitly state the Dockerfile name
    ports:
      - "8000:8000" # Map host port 8000 to container port 8000
    volumes:
      # Mount the application code into the container at /app
      # This allows code changes on the host to be reflected inside the container
      # without rebuilding the image (useful for development).
      - .:/app
      # Mount a named volume for the SQLite database file to persist data
      # The database file will be created inside the container at /app/database.db
      # This volume ensures it's stored persistently on the host machine.
      - sqlite_data:/app

    # Environment variables can be set here or loaded from a .env file
    # environment:
    #   - DATABASE_URL=sqlite:///./database.db # Example if overriding Dockerfile ENV
    # env_file:
    #   - .env # Load variables from .env file

  # --- Optional PostgreSQL Service ---
  # Uncomment this section to use PostgreSQL instead of SQLite
  # Ensure you have installed 'psycopg2-binary' (pip install psycopg2-binary)
  # Set DATABASE_URL in your .env file or environment:
  # DATABASE_URL=postgresql+psycopg2://your_db_user:your_db_password@db_postgres:5432/finance_db
  # db_postgres:
  #   image: postgres:15-alpine
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #   environment:
  #     POSTGRES_USER: your_db_user # Replace with your desired user
  #     POSTGRES_PASSWORD: your_db_password # Replace with your desired password
  #     POSTGRES_DB: finance_db # Replace with your desired database name
  #   ports:
  #     - "5432:5432" # Expose PostgreSQL port if needed for direct access
  #   healthcheck:
  #       test: ["CMD-SHELL", "pg_isready -U your_db_user -d finance_db"]
  #       interval: 10s
  #       timeout: 5s
  #       retries: 5
  #   restart: unless-stopped

  # --- Optional MySQL Service ---
  # Uncomment this section to use MySQL instead of SQLite
  # Ensure you have installed 'mysqlclient' or 'PyMySQL'
  # Set DATABASE_URL in your .env file or environment:
  # DATABASE_URL=mysql+pymysql://your_db_user:your_db_password@db_mysql:3306/finance_db
  # db_mysql:
  #   image: mysql:8.0
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: your_root_password # Set root password
  #     MYSQL_DATABASE: finance_db # Database name
  #     MYSQL_USER: your_db_user # Desired user
  #     MYSQL_PASSWORD: your_db_password # Desired password
  #   ports:
  #     - "3306:3306" # Expose MySQL port if needed
  #   healthcheck:
  #       test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "your_db_user", "-p${MYSQL_PASSWORD}"]
  #       interval: 10s
  #       timeout: 5s
  #       retries: 5
  #   restart: unless-stopped

volumes:
  sqlite_data: # Define the named volume for SQLite data persistence
    driver: local # Specify the driver (optional for local)
  # postgres_data: # Define the named volume for PostgreSQL data persistence
  #   driver: local
  # mysql_data: # Define the named volume for MySQL data persistence
  #   driver: local
